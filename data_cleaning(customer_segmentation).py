# -*- coding: utf-8 -*-
"""data_cleaning(customer_segmentation).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18MPYHZkylEVF1DI5T8pxDhQUH_FJh5wJ
"""

import numpy as np
import pandas as pd
import seaborn as sns 
import matplotlib.pyplot as plt

data = pd.read_csv('/content/cust_seg.csv')

data.head()

data.tail()

data = data.drop ('Unnamed: 0', axis=1)

data.shape

data.describe()

data.columns

data.dtypes

data.nunique()

"""Checking Null Values"""

data.isnull().sum()

"""Replacing Null Values with Median based Approach"""

data.fillna(data.mean(), inplace = True)

data.isnull().sum()

"""Handling Null Values for Categorical Columns"""

data.fillna(data.select_dtypes(include='object').mode().iloc[0], inplace=True)

data.isnull().sum()

"""Filling with Unknown Class"""

data['conyuemp'] = data['conyuemp'].fillna("Unknown")

data.isnull().sum()

"""Detecting and Removing Outliers using the Inter Quantile Range(IQR)"""

Q1 = data.quantile(0.25)
Q3 = data.quantile(0.75)
IQR = Q3 - Q1
print(IQR)

for x in ['ncodpers']:
    q75,q25 = np.percentile(data.loc[:,x],[75,25])
    intr_qr = q75-q25
 
    max = q75+(1.5*intr_qr)
    min = q25-(1.5*intr_qr)
 
    data.loc[data[x] < min,x] = np.nan
    data.loc[data[x] > max,x] = np.nan

# data['ncodpers'].fillna(data['ncodpers'].mean(), inplace = True)

for x in ['cod_prov']:
    q75,q25 = np.percentile(data.loc[:,x],[75,25])
    intr_qr = q75-q25
 
    max = q75+(1.5*intr_qr)
    min = q25-(1.5*intr_qr)
 
    data.loc[data[x] < min,x] = np.nan
    data.loc[data[x] > max,x] = np.nan

for x in ['renta']:
    q75,q25 = np.percentile(data.loc[:,x],[75,25])
    intr_qr = q75-q25
 
    max = q75+(1.5*intr_qr)
    min = q25-(1.5*intr_qr)
 
    data.loc[data[x] < min,x] = np.nan
    data.loc[data[x] > max,x] = np.nan

for x in ['ind_actividad_cliente']:
    q75,q25 = np.percentile(data.loc[:,x],[75,25])
    intr_qr = q75-q25
 
    max = q75+(1.5*intr_qr)
    min = q25-(1.5*intr_qr)
 
    data.loc[data[x] < min,x] = np.nan
    data.loc[data[x] > max,x] = np.nan

data = data.dropna(axis = 0)

data

"""After Removing Outliers"""

data.shape